{"ast":null,"code":"var _jsxFileName = \"/home/user/Scaricati/react-router/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n\n  const FormFocusedHandler = () => {\n    setIsEntered(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isEntered,\n      message: location => 'Are you sure you want to leave? All your entered data will be lost!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: FormFocusedHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: finishEnteringHandler,\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteForm, \"iW++gmQ1zYp82ZxDhijA2Nrq8YA=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["/home/user/Scaricati/react-router/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"names":["useRef","useState","Prompt","Fragment","Card","LoadingSpinner","classes","QuoteForm","props","isEntered","setIsEntered","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","FormFocusedHandler","finishEnteringHandler","location","form","isLoading","loading","control","actions"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = props => {\n    const [isEntered, setIsEntered] = useState(false);\n    const authorInputRef = useRef();\n    const textInputRef = useRef();\n\n    function submitFormHandler(event) {\n        event.preventDefault();\n\n        const enteredAuthor = authorInputRef.current.value;\n        const enteredText = textInputRef.current.value;\n\n        // optional: Could validate here\n\n        props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    }\n\n    const FormFocusedHandler = () => {\n        setIsEntered(true);\n    };\n\n    const finishEnteringHandler = () => {\n      setIsEntered(false)\n    }\n\n    return (\n        <Fragment>\n            <Prompt when={isEntered} message={location => 'Are you sure you want to leave? All your entered data will be lost!'} />\n            <Card>\n                <form onFocus={FormFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner />\n                        </div>\n                    )}\n\n                    <div className={classes.control}>\n                        <label htmlFor=\"author\">Author</label>\n                        <input type=\"text\" id=\"author\" ref={authorInputRef} />\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor=\"text\">Text</label>\n                        <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n                    </div>\n                    <div className={classes.actions}>\n                        <button onClick={finishEnteringHandler} className=\"btn\">Add Quote</button>\n                    </div>\n                </form>\n            </Card>\n        </Fragment>\n    );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}