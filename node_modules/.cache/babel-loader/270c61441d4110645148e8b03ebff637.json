{"ast":null,"code":"var _jsxFileName = \"/home/user/Scaricati/react-router/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/pages/QuoteDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlitedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Zaky',\n  text: 'Learning React is Fun'\n}, {\n  id: 'q2',\n  author: 'Abanoub',\n  text: 'Learning React is Great'\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlitedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerd\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/quotes/${params.quoteId}/comments`,\n        children: \"Load comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/home/user/Scaricati/react-router/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/pages/QuoteDetail.jsx"],"names":["useParams","Route","Link","Comments","HighlitedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;;AAEA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADiB,EAMjB;AACIF,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,MAAM,EAAE,SAFZ;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANiB,CAArB;;AAaA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAMW,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAA/C,CAAd;;AACA,MAAG,CAACF,KAAJ,EAAU;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA5B;AAAkC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUG,MAAM,CAACG,OAAQ,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAWH,CAlBD;;GAAMJ,W;UACaT,S;;;KADbS,W;AAoBN,eAAeA,WAAf","sourcesContent":["import { useParams, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport Comments from '../components/comments/Comments'\nimport HighlitedQuote from '../components/quotes/HighlightedQuote'\n\nconst DUMMY_QUOTES = [\n    {\n        id: 'q1',\n        author: 'Zaky',\n        text: 'Learning React is Fun'\n    },\n    {\n        id: 'q2',\n        author: 'Abanoub',\n        text: 'Learning React is Great'\n    },\n]\n\nconst QuoteDetail = () => {\n    const params = useParams();\n\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId)\n    if(!quote){\n        return <p>No Quote Found!</p>\n    }\n    return (\n        <>\n            <HighlitedQuote text={quote.text} author={quote.author}/>\n            <div className=\"centerd\">\n                <Link to={`/quotes/${params.quoteId}/comments`}>Load comments</Link>\n            </div>\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments />\n            </Route>\n        </>\n    );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}