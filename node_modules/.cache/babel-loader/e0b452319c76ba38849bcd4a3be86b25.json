{"ast":null,"code":"import _slicedToArray from\"/home/user/Scaricati/react-router/09-time-to-practice-starting-code/09-time-to-practice-starting-code/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';import{Prompt}from'react-router-dom';import{Fragment}from'react/cjs/react.production.min';import Card from'../UI/Card';import LoadingSpinner from'../UI/LoadingSpinner';import classes from'./QuoteForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteForm=function QuoteForm(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEntered=_useState2[0],setIsEntered=_useState2[1];var authorInputRef=useRef();var textInputRef=useRef();function submitFormHandler(event){event.preventDefault();var enteredAuthor=authorInputRef.current.value;var enteredText=textInputRef.current.value;// optional: Could validate here\nprops.onAddQuote({author:enteredAuthor,text:enteredText});}var FormFocusedHandler=function FormFocusedHandler(){setIsEntered(true);};var finishEnteringHandler=function finishEnteringHandler(){setIsEntered(false);};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Prompt,{when:isEntered,message:function message(location){return'Are you sure you want to leave? All your entered data will be lost!';}}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{onFocus:FormFocusedHandler,className:classes.form,onSubmit:submitFormHandler,children:[props.isLoading&&/*#__PURE__*/_jsx(\"div\",{className:classes.loading,children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"author\",children:\"Author\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"author\",ref:authorInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"text\",rows:\"5\",ref:textInputRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{onClick:finishEnteringHandler,className:\"btn\",children:\"Add Quote\"})})]})})]});};export default QuoteForm;","map":{"version":3,"sources":["/home/user/Scaricati/react-router/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"names":["useRef","useState","Prompt","Fragment","Card","LoadingSpinner","classes","QuoteForm","props","isEntered","setIsEntered","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","FormFocusedHandler","finishEnteringHandler","location","form","isLoading","loading","control","actions"],"mappings":"4NAAA,OAASA,MAAT,CAAiBC,QAAjB,KAAiC,OAAjC,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,OAASC,QAAT,KAAyB,gCAAzB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CACvB,cAAkCP,QAAQ,CAAC,KAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,cAAc,CAAGX,MAAM,EAA7B,CACA,GAAMY,CAAAA,YAAY,CAAGZ,MAAM,EAA3B,CAEA,QAASa,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAC9BA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,aAAa,CAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C,CACA,GAAMC,CAAAA,WAAW,CAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC,CAEA;AAEAV,KAAK,CAACY,UAAN,CAAiB,CAAEC,MAAM,CAAEL,aAAV,CAAyBM,IAAI,CAAEH,WAA/B,CAAjB,EACH,CAED,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7Bb,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,CAIA,GAAMc,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClCd,YAAY,CAAC,KAAD,CAAZ,CACD,CAFD,CAIA,mBACI,MAAC,QAAD,yBACI,KAAC,MAAD,EAAQ,IAAI,CAAED,SAAd,CAAyB,OAAO,CAAE,iBAAAgB,QAAQ,QAAI,qEAAJ,EAA1C,EADJ,cAEI,KAAC,IAAD,wBACI,cAAM,OAAO,CAAEF,kBAAf,CAAmC,SAAS,CAAEjB,OAAO,CAACoB,IAAtD,CAA4D,QAAQ,CAAEb,iBAAtE,WACKL,KAAK,CAACmB,SAAN,eACG,YAAK,SAAS,CAAErB,OAAO,CAACsB,OAAxB,uBACI,KAAC,cAAD,IADJ,EAFR,cAOI,aAAK,SAAS,CAAEtB,OAAO,CAACuB,OAAxB,wBACI,cAAO,OAAO,CAAC,QAAf,oBADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAElB,cAApC,EAFJ,GAPJ,cAWI,aAAK,SAAS,CAAEL,OAAO,CAACuB,OAAxB,wBACI,cAAO,OAAO,CAAC,MAAf,kBADJ,cAEI,iBAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,GAAzB,CAA6B,GAAG,CAAEjB,YAAlC,EAFJ,GAXJ,cAeI,YAAK,SAAS,CAAEN,OAAO,CAACwB,OAAxB,uBACI,eAAQ,OAAO,CAAEN,qBAAjB,CAAwC,SAAS,CAAC,KAAlD,uBADJ,EAfJ,GADJ,EAFJ,GADJ,CA0BH,CAlDD,CAoDA,cAAejB,CAAAA,SAAf","sourcesContent":["import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = props => {\n    const [isEntered, setIsEntered] = useState(false);\n    const authorInputRef = useRef();\n    const textInputRef = useRef();\n\n    function submitFormHandler(event) {\n        event.preventDefault();\n\n        const enteredAuthor = authorInputRef.current.value;\n        const enteredText = textInputRef.current.value;\n\n        // optional: Could validate here\n\n        props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    }\n\n    const FormFocusedHandler = () => {\n        setIsEntered(true);\n    };\n\n    const finishEnteringHandler = () => {\n      setIsEntered(false)\n    }\n\n    return (\n        <Fragment>\n            <Prompt when={isEntered} message={location => 'Are you sure you want to leave? All your entered data will be lost!'} />\n            <Card>\n                <form onFocus={FormFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner />\n                        </div>\n                    )}\n\n                    <div className={classes.control}>\n                        <label htmlFor=\"author\">Author</label>\n                        <input type=\"text\" id=\"author\" ref={authorInputRef} />\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor=\"text\">Text</label>\n                        <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n                    </div>\n                    <div className={classes.actions}>\n                        <button onClick={finishEnteringHandler} className=\"btn\">Add Quote</button>\n                    </div>\n                </form>\n            </Card>\n        </Fragment>\n    );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}